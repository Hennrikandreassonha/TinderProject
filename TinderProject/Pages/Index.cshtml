@page
@using TinderProject.Utilities
@model IndexModel
@inject TinderProject.Data.AccessControl accessControl
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Home page";
}

<h1>Welcome to the Matchmaking Site!</h1>

@{
    var completionMessage = ProfileChecker.GetProfileCompletionMessage(Model.LoggedInUser, HttpContextAccessor);
}

@if (!string.IsNullOrWhiteSpace(completionMessage?.ToString()))
{
    <p>@completionMessage</p>
}
else
{
    <script src="../js/Swipe_Screen_Js.js" defer></script>

    @* <h1>Welcome, @accessControl.LoggedInAccountName!</h1> *@

    @if (Model.Match)
    {
        <div id="match-div">
            <div id="match-options-flex">
                <h1>You got a new match!</h1>
                <div>
                    @* Skicka användaren till messagepage. *@
                    <form>
                        <button class="my-button" type="submit" asp-page="/Messages/ShowMessage" asp-route-userId="@Model.CurrentUserShown.Id">>Send message</button>
                        <button class="my-button" asp-page="/Index">Keep swiping</button>
                    </form>
                </div>
            </div>
        </div>
    }

    @if (Model.NoUsersToSwipe)
    {
        <p>Could not find any users to swipe on!</p>
    }
    @if (!Model.NoUsersToSwipe)
    {
        <div id="swipe-div" style="background-image: url('@Model.CurrentUserShown?.ProfilePictureUrl')">
            <div class="area-a">
                <h1 id="name-age">@Model.CurrentUserShown.FirstName @Model.CurrentUserShown.Age</h1>
                <p>@Model.CurrentUserShown.Description</p>

            </div>
            <div class="area-b">
                <div>
                    <p>Personality type:</p>
                    <div class="personality-div">Test1</div>
                    <div class="personality-div">Testnumber2</div>
                </div>

                <div>
                    <p>Interests:</p>
                    @foreach (var item in Model.CurrentUserShown.Interests)
                    {
                        <div class="interest-div">@item.Interest</div>
                    }

                </div>

            </div>

            <form method="post" id="like-dislike-flex" class="area-c">

                <button type="submit" name="like" value="false" class="invis-btn">
                    <img src="~/Pictures/red_cross.png" alt="A red cross for disliking" id="dislike-button"
                        class="like-dislike-pictures">
                </button>

                <button type="submit" name="like" value="true" class="invis-btn">
                    <img src="~/Pictures/green_Heart.png" alt="A green heart for liking" id="like-button"
                        class="like-dislike-pictures">
                </button>

            </form>
        </div>
    }
}