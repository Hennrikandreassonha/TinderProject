@page
@using TinderProject.Utilities
@using Microsoft.AspNetCore.Http
@model IndexModel
@inject TinderProject.Data.AccessControl accessControl
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
	string letters = HttpContext.Session.GetString("currentSwipeUserPLetters");
	string currentUserLetters = "";
	if (letters != null)
	{
		 currentUserLetters = new string(letters.Reverse().ToArray());
	}
	string userserLetters = HttpContext.Session.GetString("userPLetters");
}

@if (!ProfileChecker.ProfileIsComplete(Model.LoggedInUser))
{
	<partial name="_ProfileNotCompleteMsg" />
}
else
{
	<script src="../js/Swipe_Screen_Js.js" defer></script>

	@if (Model.NoUsersToSwipe)
	{
		<div class="center-div white-text">
			<h1>Could not find any users to swipe on!</h1>

		</div>
	}
	else
	{
		@* Match popup *@
		<div id="swipe-div">

			@if (Model.Match)
			{
				<div id="popup">
					<div id="match-popup" class="popup-pic">
						<div class="text-div-popup">
							<h1>You got a new match!</h1>
							<form>
								<button class="my-button" type="submit" asp-page="/Messages/Message"
									asp-route-userId="@Model.CurrentUserShown.Id">
									Send message
								</button>
								<button class="my-button" asp-page="/Index">Keep swiping</button>
							</form>
						</div>
					</div>
				</div>
			}

			@* Superlike popup *@
			@if (@Model.SuperLike && Model.LoggedInUser.PremiumUser)
			{
				<div id="popup">
					<div id="super-like-popup" class=popup-pic>
						<div class="text-div-popup">
							<h1>Send a message to your superliked user!</h1>

							<form method="post" id="super-like-msg">
								<input type="text" id="message-input" name="messageToSend">

								@* Error msg is displayed using JS *@
								<p id="error-message" class="red-text">Enter your message!</p>

								<div id="msg-sent-popup" class="text-div-popup">
									<p>Wohoo!</p>
									<p>Your message has been sent</p>
									<button class="my-button" type="submit" asp-page-handler="SendMsgSuper"
										asp-route-userIdToSend="@Model.CurrentUserShown.Id">
										Ok
									</button>
								</div>
							</form>

							<button id="send-super-message" class="my-button">
								Send message
							</button>
						</div>
					</div>
				</div>
			}

			<section id="upper-background" class="area-a"
				style="background-image: url('@Model.CurrentUserShown?.ProfilePictureUrl')">

				<div id="name-radiobtns-flex">
					<div id="name">
						<h1>@Model.CurrentUserShown.FirstName</h1>
					</div>
					<form id="radio-form" class="radio-buttons" method="post"
						title="Smart matching shows users with matching personality types first.&#010;Clicking these will cause a page reload">
						<label>
							<input type="radio" name="smartMatching" value="true" checked="@Model.SmartMatching"
								onchange="submitForm()">
							Smart matching
						</label>
						<label>
							<input type="radio" name="smartMatching" value="false" checked="@(!Model.SmartMatching)"
								onchange="submitForm()">
							Reverse matching
						</label>
					</form>
				</div>
				<p id="age-p" class="padding">@Model.CurrentUserShown.Age</p>
				<p class="padding">@Model.CurrentUserShown.Description</p>
			</section>

			<section id="lower-background" class="area-b">
				<div id="bottom-div">
					<div>
						<h2 class="white-text">Personality type:</h2>
						<p class="interest-type-nomatch">
							@HttpContext.Session.GetString("currentSwipeUserPStyle")
							@foreach (var item in currentUserLetters)
							{
								@if (userserLetters.Contains(item))
								{
									<span class="pink-color">@item</span>
								}
								else
								{
									@item
								}
							}
						</p>
					</div>

					<div>
						<h2 class="white-text">Interests:</h2>
						@foreach (var item in Model.CurrentUserShown.Interests)
						{
							bool isMatch = false;
							foreach (var loggedInInterest in Model.LoggedInUser.Interests)
							{
								if (loggedInInterest.Interest == item.Interest)
								{
									isMatch = true;
									break;
								}
							}

							if (isMatch)

							{
								<div class="interest-type-match">@item.Interest</div>
							}

							else

							{
								<div class="interest-type-nomatch">@item.Interest</div>
							}
						}
					</div>

					<form method="post" id="like-dislike-flex">

						@* Dislike button *@
						<button type="submit" class="invis-btn">

							<img src="~/Pictures/red_cross.png" alt="A red cross for disliking" id="dislike-button"
								class="like-dislike-pictures">
						</button>

						@* Super like button *@
						<button type="submit" id="superlike-btn" name="options" value="super" class="invis-btn"
						asp-route-userId="@Model.CurrentUserShown.Id"
							disabled="@(!Model.LoggedInUser.PremiumUser)"
							title='@(Model.LoggedInUser.PremiumUser ? null : "You have to upgrade to premium to use this feature")'>

							<img src="~/Pictures/super.png" alt="Blue star for superlike" id="super-like-pic"
								class="like-dislike-pictures">
						</button>

						@* Like button *@
						<button type="submit" name="options" value="like" class="invis-btn"
							asp-route-userId="@Model.CurrentUserShown.Id">

							<img src="~/Pictures/green_Heart.png" alt="A green heart for liking" id="like-button"
								class="like-dislike-pictures">
						</button>
					</form>
				</div>
			</section>
		</div>
	}
}